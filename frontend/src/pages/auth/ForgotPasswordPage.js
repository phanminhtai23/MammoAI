import React, { useState } from "react";
import { Form, Input, Button, message, Alert } from "antd";
import {
    MailOutlined,
    SendOutlined,
    ArrowLeftOutlined,
    CheckCircleOutlined,
} from "@ant-design/icons";
import { useNavigate, Link } from "react-router-dom";
import userService from "../../services/userService";

const ForgotPasswordPage = () => {
    const navigate = useNavigate();
    const [form] = Form.useForm();
    const [loading, setLoading] = useState(false);
    const [emailSent, setEmailSent] = useState(false);
    const [sentEmail, setSentEmail] = useState("");

    // X·ª≠ l√Ω g·ª≠i email reset password
    const handleSendResetEmail = async (values) => {
        try {
            setLoading(true);

            // G·ªçi API g·ª≠i email reset password
            const response = await userService.forgotPassword({
                email: values.email,
            });

            // N·∫øu th√†nh c√¥ng
            if (response.status === 200 || response.success) {
                setSentEmail(values.email);
                setEmailSent(true);
                message.success("Email ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë√£ ƒë∆∞·ª£c g·ª≠i!");
            }
        } catch (error) {
            // Handle c√°c l·ªói t·ª´ server
            console.log(error);
            const errorMessage = error.response?.data?.detail || error.message;

            if (errorMessage) {
                if (
                    errorMessage.includes("kh√¥ng t√¨m th·∫•y") ||
                    errorMessage.includes("not found")
                ) {
                    message.error("Email n√†y kh√¥ng t·ªìn t·∫°i trong h·ªá th·ªëng!");
                } else if (
                    errorMessage.includes("ch∆∞a x√°c th·ª±c") ||
                    errorMessage.includes("not verified")
                ) {
                    message.error(
                        "Email n√†y ch∆∞a ƒë∆∞·ª£c x√°c th·ª±c! Vui l√≤ng x√°c th·ª±c email tr∆∞·ªõc."
                    );
                } else {
                    message.error(errorMessage);
                }
            } else {
                message.error("C√≥ l·ªói x·∫£y ra! Vui l√≤ng th·ª≠ l·∫°i sau.");
            }
        } finally {
            setLoading(false);
        }
    };

    // Format email ƒë·ªÉ hi·ªÉn th·ªã (·∫©n m·ªôt ph·∫ßn)
    const formatEmail = (email) => {
        if (!email) return "";
        const [username, domain] = email.split("@");
        if (username.length <= 3) return email; // Email ng·∫Øn th√¨ kh√¥ng ·∫©n
        const hiddenUsername =
            username.slice(0, 2) +
            "*".repeat(Math.max(username.length - 4, 1)) +
            username.slice(-2);
        return `${hiddenUsername}@${domain}`;
    };

    // Render form nh·∫≠p email
    const renderEmailForm = () => (
        <>
            {/* Header */}
            <div className="text-center mb-8">
                <div className="mx-auto w-16 h-16 bg-orange-100 rounded-full flex items-center justify-center mb-4">
                    <MailOutlined className="text-orange-600 text-2xl" />
                </div>
                <h2 className="text-3xl font-bold text-gray-800">
                    Qu√™n M·∫≠t Kh·∫©u?
                </h2>
                <p className="text-gray-500 mt-2">
                    Nh·∫≠p email c·ªßa b·∫°n ƒë·ªÉ nh·∫≠n h∆∞·ªõng d·∫´n ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                </p>
            </div>

            {/* Email Form */}
            <Form
                form={form}
                onFinish={handleSendResetEmail}
                layout="vertical"
                requiredMark={false}
            >
                <Form.Item
                    name="email"
                    label="ƒê·ªãa ch·ªâ Email"
                    rules={[
                        {
                            required: true,
                            message: "Vui l√≤ng nh·∫≠p email!",
                        },
                        {
                            type: "email",
                            message: "Email kh√¥ng ƒë√∫ng ƒë·ªãnh d·∫°ng!",
                        },
                    ]}
                >
                    <Input
                        prefix={<MailOutlined className="text-gray-400" />}
                        placeholder="Nh·∫≠p email ƒë√£ ƒëƒÉng k√Ω"
                        className="h-12 rounded-lg"
                        size="large"
                        autoComplete="email"
                    />
                </Form.Item>

                <Form.Item className="mb-6">
                    <Button
                        type="primary"
                        htmlType="submit"
                        block
                        className="h-12 rounded-lg bg-orange-600 hover:bg-orange-700 transition text-lg font-semibold"
                        loading={loading}
                        icon={<SendOutlined />}
                    >
                        {loading ? "ƒêang g·ª≠i..." : "X√°c nh·∫≠n"}
                    </Button>
                </Form.Item>
            </Form>

            {/* Instructions */}
            <div className="mt-4 p-4 bg-blue-50 border border-blue-200 rounded-lg">
                <p className="text-blue-800 text-sm">
                    üí° <strong>L∆∞u √Ω:</strong> Ch√∫ng t√¥i s·∫Ω g·ª≠i link ƒë·∫∑t l·∫°i m·∫≠t
                    kh·∫©u ƒë·∫øn email c·ªßa b·∫°n. Vui l√≤ng ki·ªÉm tra c·∫£ th∆∞ m·ª•c
                    spam/junk n·∫øu kh√¥ng th·∫•y email.
                </p>
            </div>
        </>
    );

    // Render th√¥ng b√°o ƒë√£ g·ª≠i email
    const renderEmailSentMessage = () => (
        <>
            {/* Header */}
            <div className="text-center mb-8">
                <div className="mx-auto w-16 h-16 bg-green-100 rounded-full flex items-center justify-center mb-4">
                    <CheckCircleOutlined className="text-green-600 text-2xl" />
                </div>
                <h2 className="text-3xl font-bold text-gray-800">
                    Email ƒê√£ ƒê∆∞·ª£c G·ª≠i!
                </h2>
                <p className="text-gray-500 mt-2">
                    Vui l√≤ng ki·ªÉm tra email ƒë·ªÉ ho√†n t·∫•t vi·ªác ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                </p>
            </div>

            {/* Success Alert */}
            <Alert
                message="‚úÖ ƒê√£ g·ª≠i mail ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u"
                description={
                    <div className="mt-2">
                        <p className="mb-3">
                            Ch√∫ng t√¥i ƒë√£ g·ª≠i h∆∞·ªõng d·∫´n ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u ƒë·∫øn:
                        </p>
                        <div className="bg-green-50 border border-green-200 rounded-lg p-3 mb-3">
                            <p className="font-semibold text-green-700 text-center">
                                üìß {formatEmail(sentEmail)}
                            </p>
                        </div>
                        <p className="text-sm text-gray-600">
                            <strong>‚è∞ Th·ªùi h·∫°n:</strong> Link ƒë·∫∑t l·∫°i m·∫≠t kh·∫©u
                            c√≥ hi·ªáu l·ª±c trong <strong>10 ph√∫t</strong>.
                        </p>
                    </div>
                }
                type="success"
                showIcon={false}
                className="mb-6"
            />

            {/* Instructions */}
            <div className="p-4 bg-yellow-50 border border-yellow-200 rounded-lg mb-6">
                <p className="text-yellow-800 text-sm font-semibold mb-2">
                    üìã H∆∞·ªõng d·∫´n ti·∫øp theo:
                </p>
                <ol className="text-yellow-700 text-sm space-y-1 ml-4">
                    <li>1. M·ªü email trong h·ªôp th∆∞ c·ªßa b·∫°n</li>
                    <li>2. Click v√†o link "ƒê·∫∑t l·∫°i m·∫≠t kh·∫©u"</li>
                    <li>3. Nh·∫≠p m·∫≠t kh·∫©u m·ªõi theo y√™u c·∫ßu</li>
                    <li>4. ƒêƒÉng nh·∫≠p v·ªõi m·∫≠t kh·∫©u m·ªõi</li>
                </ol>
                <p className="text-yellow-600 text-xs mt-3">
                    üí° <strong>M·∫πo:</strong> N·∫øu kh√¥ng th·∫•y email, h√£y ki·ªÉm tra
                    th∆∞ m·ª•c spam/junk
                </p>
            </div>

            {/* Resend Option */}
            <div className="text-center">
                <p className="text-gray-600 text-sm mb-3">
                    Kh√¥ng nh·∫≠n ƒë∆∞·ª£c email?
                </p>
                <Button
                    type="link"
                    className="text-orange-600 hover:text-orange-800 font-semibold p-0"
                    onClick={() => {
                        setEmailSent(false);
                        form.setFieldsValue({ email: sentEmail });
                    }}
                >
                    G·ª≠i l·∫°i email
                </Button>
            </div>
        </>
    );

    return (
        <div className="min-h-screen bg-gradient-to-br from-orange-100 to-red-300 flex items-center justify-center px-4">
            <div className="bg-white shadow-2xl rounded-2xl overflow-hidden w-full max-w-md">
                <div className="p-8">
                    {/* Back Button */}
                    <div className="mb-6">
                        <Button
                            type="link"
                            icon={<ArrowLeftOutlined />}
                            onClick={() => navigate("/login")}
                            className="text-gray-600 hover:text-gray-800 p-0 font-medium"
                        >
                            Quay l·∫°i ƒëƒÉng nh·∫≠p
                        </Button>
                    </div>

                    {/* Render theo tr·∫°ng th√°i */}
                    {emailSent ? renderEmailSentMessage() : renderEmailForm()}

                    {/* Footer */}
                    <div className="text-center mt-6 pt-6 border-t border-gray-200">
                        <p className="text-gray-600 text-sm">
                            Ch∆∞a c√≥ t√†i kho·∫£n?{" "}
                            <Link
                                to="/register"
                                className="text-orange-600 hover:text-orange-800 font-semibold transition"
                            >
                                ƒêƒÉng k√Ω ngay
                            </Link>
                        </p>
                    </div>
                </div>
            </div>
        </div>
    );
};

export default ForgotPasswordPage;
